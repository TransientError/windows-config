(defcfg
  input (low-level-hook)
  output (send-event-sink)
)

(defsrc
esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  home end  ins  del
  grv  1    2    3    4    5    6    7    8    9    0    -     =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [     ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '          ret
  lsft z    x    c    v    b    n    m    ,    .    /               rsft
  wkup lctl lmet lalt           spc            ralt sys  rctl  pgup up   pgdn
                                                               left down rght
)

(deflayer base
  _     f1    f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12   home end ins del
  grv   1     2    3    4    5    6    7    8    9    0    -    =     bspc
  tab   q     w    e    r    t    y    u    i    o    p    [    ]     \
@escWin a     s    d    fsft g    h    jsft k    l    ;    '          @retWin
  lsft  @zctl x    c    v    b    n    m    ,    .    @slashctl       rsft
  wkup  lctl  lmet lalt           spc            ralt sys  rctl @nsym up   @sym
                                                                left     down right
)

(deflayer symbols
_    _    _    _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _     _
  _    S-1  S-2  S-[  S-]  S-\  _    7    8    9    *    _    _     _
  _    S-3  S-4  S-9  S-0  grv  _    4    5    6    +    _          _
  _    S-5  S-6  [    ]   S-grv _    1    2    3    _               _
  _    _    _    _              _              0    _    _     _    _    @unsym
                                                               _    _    _
)

(defalias 
  zctl (tap-hold 200 z lctl)
  slashctl (tap-hold 200 / rctl)
  escWin (tap-hold 200 esc lmet)
  retWin (tap-hold 200 ret lmet)
  sym (layer-add symbols)
  unsym (layer-rem symbols)
  nsym (around-next @sym)
  fsft (tap-hold 200 f lsft)
  jsft (tap-hold 200 j rsft)
)

